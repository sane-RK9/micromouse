[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "quantum-micromouse"
version = "0.2.1"
description = "Quantum-inspired neural network for micromouse maze solving"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Your Name", email = "micromouse-support@quantumlabs.ai" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.24.0",
    "jax>=0.4.13",
    "jaxlib>=0.4.13",
    "tqdm>=4.65.0",
    "argparse>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.7.0",
    "flake8>=6.1.0",
    "mypy>=1.5.1",
    "sphinx>=7.1.2",
    "sphinx-rtd-theme>=1.3.0",
    "jinja2>=3.1.2",
]

[tool.hatch.build.targets.wheel]
packages = ["micromouse"]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=micromouse --cov-report=term-missing"

[tool.coverage.run]
source = ["micromouse"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
] 